<?xml version="1.0"?>
<xs:schema version="1.0" targetNamespace="http://www.vectorprint.nl/config/settings/1.5"
           xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vpconfig="http://www.vectorprint.nl/config/settings/1.5"
           elementFormDefault="qualified" attributeFormDefault="unqualified">
   <xs:annotation>
      <xs:documentation>Schema for Settings in applications.</xs:documentation>
   </xs:annotation>
   
   <xs:complexType name="settingstype" id="settingstype">
      <xs:annotation>
         <xs:documentation>basically settings are read from url's, features and preprocessors can be added</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="url" type="xs:anyURI" minOccurs="0" maxOccurs="unbounded" >
            <xs:annotation>
               <xs:documentation>when you specify urls at this level settings wil be parsed using the current default parser.
                  You can control which parser is the default on the settings factory implementation. Instead you can also
                  read settings from urls using a feature where can declare the parser that will be used.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="feature" type="vpconfig:featuretype" minOccurs="0" maxOccurs="unbounded" />
         <xs:element name="preprocessor" type="vpconfig:preprocessortype" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
      <xs:attribute name="readonly" default="false" type="xs:boolean">
         <xs:annotation>
            <xs:documentation>by default settings can be modified</xs:documentation>
         </xs:annotation>
      </xs:attribute>
      <xs:attribute name="cache" default="true" type="xs:boolean">
         <xs:annotation>
            <xs:documentation>by default settings will be cached to minimize expensive string conversion</xs:documentation>
         </xs:annotation>
      </xs:attribute>
      <xs:attribute name="observable" default="false" type="xs:boolean">
         <xs:annotation>
            <xs:documentation>by default settings will not be obervable, if they are you can add observables to the settings</xs:documentation>
         </xs:annotation>
      </xs:attribute>
   </xs:complexType>

   <xs:complexType name="featuretype" id="featuretype" >
      <xs:annotation>
         <xs:documentation>You can extend your settings with features provided in this library or develop your own features</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="url" type="xs:anyURI" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>decorators may need input for their functionality, a URL to retrieve help info for example.
               Such a feature requires a constructor with EnhancedMap and URL[].</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
      <xs:attribute name="classname" type="xs:string" use="required">
         <xs:annotation>
            <xs:documentation>Used by ParsingProperties. A feature class must extend AbstractPropertiesDecorator and requires a constructor with EnhancedMap as argument.</xs:documentation>
         </xs:annotation>
      </xs:attribute>
      <xs:attribute name="factoryClass" type="xs:string" default="com.vectorprint.configuration.binding.settings.EnhancedMapBindingFactoryImpl">
         <xs:annotation>
            <xs:documentation>Used by ParsingProperties. You can define your own factory for syntax binding.</xs:documentation>
         </xs:annotation>
      </xs:attribute>
   </xs:complexType>

   <xs:complexType name="preprocessortype" id="preprocessortype" >
      <xs:annotation>
         <xs:documentation>a preprocessor preprocesses keys and / or values before addition.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="keysToSkip" type="xs:string" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>you can exclude certain keys from preprocessing</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
      <xs:attribute name="preprocessorclassname" use="required" type="xs:string">
         <xs:annotation>
            <xs:documentation>the preprocessor must be a subclass of AbstractPrepareKeyValue</xs:documentation>
         </xs:annotation>
      </xs:attribute>
   </xs:complexType>
   
   <xs:element name="settings" id="settings" type="vpconfig:settingstype">
      <xs:annotation>
         <xs:documentation>definition of settings to use in an application</xs:documentation>
      </xs:annotation>
   </xs:element>

</xs:schema>
